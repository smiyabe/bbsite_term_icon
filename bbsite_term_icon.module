<?php
/**
 * @file
 *
 */

/**
 * Implements hook_block_theme().
 */
function bbsite_term_icon_theme() {
  return array(
    'bbsite_term_icon_formatter' => array(
      'render element' => 'element',
      'variables' => array('term' => NULL, 'icon' => NULL, 'image_style' => NULL),
    ),
  );
}

/**
 * Implements hook_field_formatter_info()
 */
function bbsite_term_icon_field_formatter_info() {
  return array(
    'bbsite_term_icon_reference_icon_link' => array(
      'label' => 'Icon link',
      'field types' => array('taxonomy_term_reference'),
      'settings' => array('image_style' => '', 'icon_field' => ''),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form()
 */
function bbsite_term_icon_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $image_styles = image_style_options(FALSE);
  $element['image_style'] = array(
    '#title' => t('Image style'),
    '#type' => 'select',
    '#default_value' => $settings['image_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );

  $image_fields = _bbsite_term_icon_term_image_fields($field['settings']['allowed_values'][0]['vocabulary']);
  $element['icon_field'] = array(
    '#title' => t('Icon field'),
    '#type' => 'select',
    '#default_value' => $settings['icon_field'],
    '#options' => $image_fields,
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary()
 */
function bbsite_term_icon_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();

  $image_styles = image_style_options(FALSE);
  // Unset possible 'No defined styles' option.
  unset($image_styles['']);
  // Styles could be lost because of enabled/disabled modules that defines
  // their styles in code.
  if (isset($image_styles[$settings['image_style']])) {
    $summary[] = t('Image style: @style', array('@style' => $image_styles[$settings['image_style']]));
  }
  else {
    $summary[] = t('Original image');
  }

  $image_fields = _bbsite_term_icon_term_image_fields($field['settings']['allowed_values'][0]['vocabulary']);
  unset($image_fields['']);
  if (isset($image_fields[$settings['icon_field']])) {
    $field_label = $image_fields[$settings['icon_field']];
  } else {
    $field_label = array_shift($image_fields);
  }
  $summary[] = t('Image Field: @field', array('@field' => $field_label));

  return implode('<br />', $summary);
}

/**
 * vocabulary に追加されている image フィールドを取得する
 */
function _bbsite_term_icon_term_image_fields($vocabulary_name) {
  $image_fields = array();
  $category_fields = field_info_instances("taxonomy_term", $vocabulary_name);
  foreach ($category_fields as $key => $item) {
    if ($item['widget']['type'] == 'image_image') {
      $image_fields[$key] = $item['label'];
    }
  }

  return $image_fields;
}

/**
 * Implements hook_field_formatter_view()
 */
function bbsite_term_icon_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  if ($display['type'] == 'bbsite_term_icon_reference_icon_link') {
    foreach ($items as $delta => $item) {
      $term = taxonomy_term_load($item['tid']);
      if ($display['settings']['icon_field'] && isset($term->{$display['settings']['icon_field']})) {
        $icon = $term->{$display['settings']['icon_field']}[$langcode][0];
      } else {
        $icon = NULL;
      }
      $element[$delta] = array(
        '#theme' => 'bbsite_term_icon_formatter',
        '#term' => $term,
        '#icon' => $icon,
        '#image_style' => $display['settings']['image_style'],
      );
    }
  }

  return $element;
}

/**
 * アイコンリンクのテーマ関数
 */
function theme_bbsite_term_icon_formatter($element) {
  $term = $element['term'];
  $icon = $element['icon'];
  $uri = entity_uri('taxonomy_term', $term);

  if ($icon) {
    $uri['options']['html'] = true;

    $icon['path'] = $icon['uri'];
    $icon['alt'] = $term->name;
    if ($term->description) {
      $icon['title'] = $uri['options']['attributes']['title'] = $term->description;
    } else {
      $icon['title'] = $uri['options']['attributes']['title'] = $term->name;
    }

    if (isset($element['image_style']) && $element['image_style'] != '') {
      $icon['style_name'] = $element['image_style'];
      $text = theme('image_style', $icon);
    } else {
      $text = theme('image', $icon);
    }
  } else {
    $uri['options']['html'] = false;
    $text = $term->name;
  }

  return l($text, $uri['path'], $uri['options']);
}
